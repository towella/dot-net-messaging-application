// <auto-generated />
using System;
using DotNetMessagingApplication.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetMessagingApplication.Server.Migrations
{
    [DbContext(typeof(MessagingAppContext))]
    [Migration("20250820084423_AddSentAndReceivedMessages")]
    partial class AddSentAndReceivedMessages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SenderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeSent")
                        .HasColumnType("TEXT");

                    b.HasKey("MessageId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Relationship", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OtherPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "OtherPersonId");

                    b.HasIndex("OtherPersonId");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Settings", b =>
                {
                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrivacyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SendEmailNotifications")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("TimeLimit")
                        .HasColumnType("TEXT");

                    b.HasKey("SettingsId", "UserId");

                    b.HasIndex("SettingsId")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Child", b =>
                {
                    b.HasBaseType("DotNetMessagingApplication.Server.Data.Models.User");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("ParentId");

                    b.HasDiscriminator().HasValue("Child");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Message", b =>
                {
                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "Recipient")
                        .WithMany("MessagesReceived")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "Sender")
                        .WithMany("MessagesSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Relationship", b =>
                {
                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "OtherPerson")
                        .WithMany("Following")
                        .HasForeignKey("OtherPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "User")
                        .WithMany("Followers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OtherPerson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Settings", b =>
                {
                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "User")
                        .WithOne("Settings")
                        .HasForeignKey("DotNetMessagingApplication.Server.Data.Models.Settings", "SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Child", b =>
                {
                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.User", b =>
                {
                    b.Navigation("Followers");

                    b.Navigation("Following");

                    b.Navigation("MessagesReceived");

                    b.Navigation("MessagesSent");

                    b.Navigation("Settings")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
