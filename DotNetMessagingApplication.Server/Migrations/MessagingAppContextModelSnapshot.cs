// <auto-generated />
using System;
using DotNetMessagingApplication.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetMessagingApplication.Server.Migrations
{
    [DbContext(typeof(MessagingAppContext))]
    partial class MessagingAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Relationship", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OtherPersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RelationshipType")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "OtherPersonId");

                    b.HasIndex("OtherPersonId");

                    b.ToTable("Relationship");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Settings", b =>
                {
                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrivacyLevel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SendEmailNotifications")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("TimeLimit")
                        .HasColumnType("TEXT");

                    b.HasKey("SettingsId", "UserId");

                    b.HasIndex("SettingsId")
                        .IsUnique();

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Relationship", b =>
                {
                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "OtherPerson")
                        .WithMany("Following")
                        .HasForeignKey("OtherPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "User")
                        .WithMany("Followers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OtherPerson");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.Settings", b =>
                {
                    b.HasOne("DotNetMessagingApplication.Server.Data.Models.User", "User")
                        .WithOne("Settings")
                        .HasForeignKey("DotNetMessagingApplication.Server.Data.Models.Settings", "SettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DotNetMessagingApplication.Server.Data.Models.User", b =>
                {
                    b.Navigation("Followers");

                    b.Navigation("Following");

                    b.Navigation("Settings")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
